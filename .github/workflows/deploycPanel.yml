name: Deploy Next.js to cPanel
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install and Build
        env:
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_APP_MODE: ${{ secrets.NEXT_PUBLIC_APP_MODE }}
          NEXT_PUBLIC_REVALIDATION_TIME: ${{ secrets.NEXT_PUBLIC_REVALIDATION_TIME }}
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          NEXT_PUBLIC_FIREBASE_AUTH_EMAIL: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_EMAIL }}
          NEXT_PUBLIC_FIREBASE_AUTH_PASSWORD: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_PASSWORD }}
          AUTH_TRUST_HOST: ${{ secrets.AUTH_TRUST_HOST }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MAIL_SENDER_EMAIL: ${{ secrets.MAIL_SENDER_EMAIL }}
          MAIL_API_TOKEN: ${{ secrets.MAIL_API_TOKEN }}
          MAIL_SECRET_TOKEN: ${{ secrets.MAIL_SECRET_TOKEN }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_CLIENT_ID: ${{ secrets.NOTION_CLIENT_ID }}
          NOTION_CLIENT_SECRET: ${{ secrets.NOTION_CLIENT_SECRET }}
        run: |
          npm ci --legacy-peer-deps
          npm run build --no-lint
          npm prune --production

      - name: Prepare Deployment
        run: |
          mkdir -p deployment
          # Only copy necessary files
          cp -r .next/standalone/ deployment/
          cp -r .next/static/ deployment/.next/static/
          cp -r public/ deployment/
          cp package.json deployment/
          
          # Create optimized .htaccess
          echo 'RewriteEngine On
          RewriteBase /
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_URI} !^/_next/static
          RewriteCond %{REQUEST_URI} !^/_next/image
          RewriteCond %{REQUEST_URI} !^/public
          RewriteRule ^(.*)$ /index.html [L]
          <IfModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript
          </IfModule>' > deployment/.htaccess

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deployment/
          server-dir: ./public_html/
          protocol: ftp
          server-dry-run: false
          dangerous-clean-slate: false
          exclude: |
            *node_modules*
            *.git*
            *.md
            *.log
            *.DS_Store
          ftp-debug: true

      - name: Setup PM2 Process
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/tandtrav/public_html
            /opt/cpanel/ea-nodejs20/bin/npm install --omit=dev
            /opt/cpanel/ea-nodejs20/bin/npm install pm2 -g
            /opt/cpanel/ea-nodejs20/bin/npx pm2 delete next-app || true
            NODE_ENV=production /opt/cpanel/ea-nodejs20/bin/npx pm2 start server.js --name next-app
            /opt/cpanel/ea-nodejs20/bin/npx pm2 save
            /opt/cpanel/ea-nodejs20/bin/npx pm2 startup
